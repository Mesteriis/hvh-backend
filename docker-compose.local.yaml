version: '3.9'

services:
  redis:
    image: redis:6.0.9-alpine
    container_name: redis-local
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    build:
      context: .
      dockerfile: ./docker/db/Dockerfile
    container_name: db-local
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_HOST_AUTH_METHOD: md5
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    container_name: backend-local
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8000/health/root"]
      interval: 10s
      timeout: 5s
      retries: 5


#  traefik: # new
#    image: traefik:v2.9.6
#    ports:
#      - "8008:80"
#      - "8081:8080"
#    volumes:
#      - "./traefik.dev.toml:/etc/traefik/traefik.toml"
#      - "/var/run/docker.sock:/var/run/docker.sock:ro"

#    volumes:
#      - .:/app
