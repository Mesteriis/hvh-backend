[tool.poetry]
name = "Home Video Hub"
version = "0.0.1"
description = "A backend service for home media library"
authors = ["Aleksander Meshchryakov <favm@sh-inc.ru>"]
repository = "https://github.com/mesteriis/hvh-backend"
documentation = "https://mesteriis.github.io/hvh-backend/"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = ">=3.12,<4.0"
fastapi = "^0.111.1"
uvicorn = "^0.30.3"
asyncpg = "^0.29.0"
pydantic-settings = "^2.3.4"
alembic = "^1.13.2"
psycopg2-binary = "^2.9.9"
httpx = "^0.27.0"
asgi-correlation-id = "^4.3.1"
python-decouple = "^3.8"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
pytest-mock = "^3.14.0"
deptry = "^0.16.2"
mypy = "^1.5.1"
tox = "^4.11.1"
factory-boy = "^3.3.0"
pre-commit = "^3.7.1"
safety = "^3.2.4"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.2.7"
mkdocstrings = {extras = ["python"], version = "^0.23.0"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
requires-python = "==3.12.2"

[tool.mypy]
files = ["src"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"

[tool.hadolint]
ignore = ["DL3013"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py312"
line-length = 120
fix = true
select = [
    "E",      # pycodestyle
    "F",      # pyflakes
    "B",      # bugbear
    "C9",     # temporary mccabe
    "C",      # mccabe and flake8-comprehensions
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "S",      # bandit
    "BLE",    # flake8-blind-except
    "C4",     # flake8-comprehensions
    "DTZ",    # flake8-datetimez
    "T10",    # flake8-debugger
    "EM",     # flake8-errmsg
    "ISC",    # flake8-implicit-str-concat
    "G",      # flake8-logging-format
    "INP",    # flake8-no-pep420
    "PIE",    # flake8-pie
    "T20",    # flake8-print
    "PT",     # flake8-pytest-style
    "Q",      # flake8-quotes
    "RSE",    # flake8-raise
    "SLF",    # flake8-self
    "SIM",    # flake8-simplify
    "ARG",    # flake8-unused-arguments
    "PTH",    # flake8-use-pathlib
    "ERA",    # eradicate
    "PGH",    # pygrep-hooks
    "PL",     # Pylint
    "TRY",    # tryceratops
    "RUF",    # Ruff-specific rules
]
ignore = [
    "E501",   # LineTooLong
    "E731",   # DoNotAssignLambda
]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["src"]


[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[mccabe]
max-complexity = 6

[pylint]
max-args = 5
max-returns = 3
